return(sub_phy)}))
} else {
phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) >= cutoff}, TRUE)
if(sum(taxa_sums(sub_phy)) != 0){sub_phy <- filter_taxa(sub_phy, function(x){sum(x) != 0}, TRUE)}
return(sub_phy)}))
}
}else {
cutoff <- floor(ncol(otu_table(phyloseq_obj)) * frequency)
if(below == TRUE){
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
} else {
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) != 0}, TRUE)
}
}
if(is.numeric(treatments)){treatment <- colnames(sample_data(phyloseq_obj)[,treatments])
} else {treatment <- eval(parse(text=paste0("colnames(sample_data(phyloseq_obj)[,c('", paste0(treatments, collapse = "', '"), "')])")))
}
treatment
if(!(is.null(subset)) & length(treatment) == 1){
phyloseq_obj <- eval(parse(text=paste0("subset_samples(phyloseq_obj, ", paste0(treatment), " %in% c('", paste0(subset, collapse = "', '"), "'))")))
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) > 0}, TRUE)
}
phyloseq_obj <- eval(parse(text=paste0("subset_samples(phyloseq_obj, ", paste0(treatment), " %in% c('", paste0(subset, collapse = "', '"), "'))")))
subset
subset = NULL
if(!(is.null(subset)) & length(treatment) == 1){
phyloseq_obj <- eval(parse(text=paste0("subset_samples(phyloseq_obj, ", paste0(treatment), " %in% c('", paste0(subset, collapse = "', '"), "'))")))
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) > 0}, TRUE)
}
Treatment_Groups <- setDT(as(sample_data(phyloseq_obj)[,colnames(sample_data(phyloseq_obj)) %in% treatment], "data.frame"))
Treatment_Groups
# Treatment_Groups[, Treatment_Group := .GRP, by = Treatment_Groups]
eval(parse(text=paste0("Treatment_Groups[, Treatment_Group := paste(", paste(treatment, collapse = ", "), ", sep = '-'), by = Treatment_Groups]")))
Treatment_Groups
sample_data(phyloseq_obj)[,'Treatment_Group'] <- Treatment_Groups[,"Treatment_Group"]
sample_data(phyloseq_obj)
Treatment_Groups <- unique(Treatment_Groups[,"Treatment_Group"])
Treatment_Groups
cutoff <- floor(ncol(otu_table(phyloseq_obj)) * frequency)
if(below == TRUE){
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
} else {
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) != 0}, TRUE)
}
below = FALSE
drop_samples = FALSE
if(below == TRUE){
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
} else {
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) != 0}, TRUE)
}
phyloseq_obj
if(drop_samples == TRUE){
phyloseq_obj <- prune_samples(sample_sums(phyloseq_obj) > 0, phyloseq_obj)
}
phyloseq_obj
find_generalists(mock_phyloseq)
find_generalists(mock_phyloseq, 0.3, treatments = "day")
treatments
find_generalists(mock_phyloseq, 0.3, treatments = "day")
treatments
frequency
subset
below
drop_samples
phyloseq_obj
phyloseq_obj = mock_phyloseq
# phyloseq_obj <- prune_samples(sample_sums(phyloseq_obj) > 0, phyloseq_obj)
if(!(is.null(treatments))){
if(is.numeric(treatments)){treatment <- colnames(sample_data(phyloseq_obj)[,treatments])
} else {treatment <- eval(parse(text=paste0("colnames(sample_data(phyloseq_obj)[,c('", paste0(treatments, collapse = "', '"), "')])")))
}
if(!(is.null(subset)) & length(treatment) == 1){
phyloseq_obj <- eval(parse(text=paste0("subset_samples(phyloseq_obj, ", paste0(treatment), " %in% c('", paste0(subset, collapse = "', '"), "'))")))
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) > 0}, TRUE)
}
Treatment_Groups <- setDT(as(sample_data(phyloseq_obj)[,colnames(sample_data(phyloseq_obj)) %in% treatment], "data.frame"))
# Treatment_Groups[, Treatment_Group := .GRP, by = Treatment_Groups]
eval(parse(text=paste0("Treatment_Groups[, Treatment_Group := paste(", paste(treatment, collapse = ", "), ", sep = '-'), by = Treatment_Groups]")))
sample_data(phyloseq_obj)[,'Treatment_Group'] <- Treatment_Groups[,"Treatment_Group"]
Treatment_Groups <- unique(Treatment_Groups[,"Treatment_Group"])
# phyloseq_obj <- phyloseq(otu_table(phyloseq_obj), tax_table(phyloseq_obj), sample_data(phyloseq_obj))
if(below == TRUE){
phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) <= cutoff}, TRUE)
return(sub_phy)}))
} else {
phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) >= cutoff}, TRUE)
if(sum(taxa_sums(sub_phy)) != 0){sub_phy <- filter_taxa(sub_phy, function(x){sum(x) != 0}, TRUE)}
return(sub_phy)}))
}
}else {
cutoff <- floor(ncol(otu_table(phyloseq_obj)) * frequency)
if(below == TRUE){
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
} else {
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) != 0}, TRUE)
}
}
phyloseq_obj
!(is.null(treatments))
if(is.numeric(treatments)){treatment <- colnames(sample_data(phyloseq_obj)[,treatments])
} else {treatment <- eval(parse(text=paste0("colnames(sample_data(phyloseq_obj)[,c('", paste0(treatments, collapse = "', '"), "')])")))
}
treatment
!(is.null(subset))
length(treatment)
Treatment_Groups <- setDT(as(sample_data(phyloseq_obj)[,colnames(sample_data(phyloseq_obj)) %in% treatment], "data.frame"))
Treatment_Groups
# Treatment_Groups[, Treatment_Group := .GRP, by = Treatment_Groups]
eval(parse(text=paste0("Treatment_Groups[, Treatment_Group := paste(", paste(treatment, collapse = ", "), ", sep = '-'), by = Treatment_Groups]")))
sample_data(phyloseq_obj)[,'Treatment_Group'] <- Treatment_Groups[,"Treatment_Group"]
Treatment_Groups <- unique(Treatment_Groups[,"Treatment_Group"])
# phyloseq_obj <- phyloseq(otu_table(phyloseq_obj), tax_table(phyloseq_obj), sample_data(phyloseq_obj))
if(below == TRUE){
phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) <= cutoff}, TRUE)
return(sub_phy)}))
} else {
phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) >= cutoff}, TRUE)
if(sum(taxa_sums(sub_phy)) != 0){sub_phy <- filter_taxa(sub_phy, function(x){sum(x) != 0}, TRUE)}
return(sub_phy)}))
}
below
phyloseq_obj
cutoff <- floor(ncol(otu_table(phyloseq_obj)) * frequency)
cutoff
below
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
phyloseq_obj
phyloseq_obj
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) != 0}, TRUE)
phyloseq_obj
find_generalists <- function(phyloseq_obj, frequency = 0, treatments = NULL, subset = NULL, below = FALSE, drop_samples = FALSE){
# phyloseq_obj <- prune_samples(sample_sums(phyloseq_obj) > 0, phyloseq_obj)
if(!(is.null(treatments))){
if(is.numeric(treatments)){treatment <- colnames(sample_data(phyloseq_obj)[,treatments])
} else {treatment <- eval(parse(text=paste0("colnames(sample_data(phyloseq_obj)[,c('", paste0(treatments, collapse = "', '"), "')])")))
}
if(!(is.null(subset)) & length(treatment) == 1){
phyloseq_obj <- eval(parse(text=paste0("subset_samples(phyloseq_obj, ", paste0(treatment), " %in% c('", paste0(subset, collapse = "', '"), "'))")))
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) > 0}, TRUE)
}
Treatment_Groups <- setDT(as(sample_data(phyloseq_obj)[,colnames(sample_data(phyloseq_obj)) %in% treatment], "data.frame"))
# Treatment_Groups[, Treatment_Group := .GRP, by = Treatment_Groups]
eval(parse(text=paste0("Treatment_Groups[, Treatment_Group := paste(", paste(treatment, collapse = ", "), ", sep = '-'), by = Treatment_Groups]")))
sample_data(phyloseq_obj)[,'Treatment_Group'] <- Treatment_Groups[,"Treatment_Group"]
Treatment_Groups <- unique(Treatment_Groups[,"Treatment_Group"])
# phyloseq_obj <- phyloseq(otu_table(phyloseq_obj), tax_table(phyloseq_obj), sample_data(phyloseq_obj))
if(below == TRUE){
phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) <= cutoff}, TRUE)
return(sub_phy)}))
} else {
phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) >= cutoff}, TRUE)
if(sum(taxa_sums(sub_phy)) != 0){sub_phy <- filter_taxa(sub_phy, function(x){sum(x) != 0}, TRUE)}
return(sub_phy)}))
}
}else {
cutoff <- floor(ncol(otu_table(phyloseq_obj)) * frequency)
if(below == TRUE){
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
} else {
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) != 0}, TRUE)
}
}
if(drop_samples == TRUE){
phyloseq_obj <- prune_samples(sample_sums(phyloseq_obj) > 0, phyloseq_obj)
}
return(phyloseq_obj)
}
find_generalists(mock_phyloseq, 0.3, "day")
find_generalists <- function(phyloseq_obj, frequency = 0, treatments = NULL, subset = NULL, below = FALSE, drop_samples = FALSE){
# phyloseq_obj <- prune_samples(sample_sums(phyloseq_obj) > 0, phyloseq_obj)
if(!(is.null(treatments))){
if(is.numeric(treatments)){treatment <- colnames(sample_data(phyloseq_obj)[,treatments])
} else {treatment <- eval(parse(text=paste0("colnames(sample_data(phyloseq_obj)[,c('", paste0(treatments, collapse = "', '"), "')])")))
}
if(!(is.null(subset)) & length(treatment) == 1){
new_phyloseq_obj <- eval(parse(text=paste0("subset_samples(phyloseq_obj, ", paste0(treatment), " %in% c('", paste0(subset, collapse = "', '"), "'))")))
new_phyloseq_obj <- filter_taxa(new_phyloseq_obj, function(x){sum(x) > 0}, TRUE)
}
Treatment_Groups <- setDT(as(sample_data(new_phyloseq_obj)[,colnames(sample_data(new_phyloseq_obj)) %in% treatment], "data.frame"))
# Treatment_Groups[, Treatment_Group := .GRP, by = Treatment_Groups]
eval(parse(text=paste0("Treatment_Groups[, Treatment_Group := paste(", paste(treatment, collapse = ", "), ", sep = '-'), by = Treatment_Groups]")))
sample_data(new_phyloseq_obj)[,'Treatment_Group'] <- Treatment_Groups[,"Treatment_Group"]
Treatment_Groups <- unique(Treatment_Groups[,"Treatment_Group"])
# new_phyloseq_obj <- phyloseq(otu_table(new_phyloseq_obj), tax_table(new_phyloseq_obj), sample_data(new_phyloseq_obj))
if(below == TRUE){
new_phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) <= cutoff}, TRUE)
return(sub_phy)}))
} else {
new_phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) >= cutoff}, TRUE)
if(sum(taxa_sums(sub_phy)) != 0){sub_phy <- filter_taxa(sub_phy, function(x){sum(x) != 0}, TRUE)}
return(sub_phy)}))
}
}else {
cutoff <- floor(ncol(otu_table(phyloseq_obj)) * frequency)
if(below == TRUE){
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
} else {
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) != 0}, TRUE)
}
}
if(drop_samples == TRUE){
new_phyloseq_obj <- prune_samples(sample_sums(phyloseq_obj) > 0, phyloseq_obj)
}
return(new_phyloseq_obj)
}
find_generalists(mock_phyloseq, 0.3, "day")
phyloseq_obj
phyloseq_obj = mock_phyloseq
cutoff <- floor(ncol(otu_table(phyloseq_obj)) * frequency)
if(below == TRUE){
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
} else {
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) != 0}, TRUE)
}
new_phyloseq_obj
cutoff <- floor(ncol(otu_table(phyloseq_obj)) * frequency)
if(below == TRUE){
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
} else {
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) != 0}, TRUE)
}
new_phyloseq_obj
phyloseq_obj
cutoff
below
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) != 0}, TRUE)
new_phyloseq_obj
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
new_phyloseq_obj
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
new_phyloseq_obj
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) != 0}, TRUE)
new_phyloseq_obj
find_generalists <- function(phyloseq_obj, frequency = 0, treatments = NULL, subset = NULL, below = FALSE, drop_samples = FALSE){
# phyloseq_obj <- prune_samples(sample_sums(phyloseq_obj) > 0, phyloseq_obj)
if(!(is.null(treatments))){
if(is.numeric(treatments)){treatment <- colnames(sample_data(phyloseq_obj)[,treatments])
} else {treatment <- eval(parse(text=paste0("colnames(sample_data(phyloseq_obj)[,c('", paste0(treatments, collapse = "', '"), "')])")))
}
if(!(is.null(subset)) & length(treatment) == 1){
new_phyloseq_obj <- eval(parse(text=paste0("subset_samples(phyloseq_obj, ", paste0(treatment), " %in% c('", paste0(subset, collapse = "', '"), "'))")))
new_phyloseq_obj <- filter_taxa(new_phyloseq_obj, function(x){sum(x) > 0}, TRUE)
}
Treatment_Groups <- setDT(as(sample_data(new_phyloseq_obj)[,colnames(sample_data(new_phyloseq_obj)) %in% treatment], "data.frame"))
# Treatment_Groups[, Treatment_Group := .GRP, by = Treatment_Groups]
eval(parse(text=paste0("Treatment_Groups[, Treatment_Group := paste(", paste(treatment, collapse = ", "), ", sep = '-'), by = Treatment_Groups]")))
sample_data(new_phyloseq_obj)[,'Treatment_Group'] <- Treatment_Groups[,"Treatment_Group"]
Treatment_Groups <- unique(Treatment_Groups[,"Treatment_Group"])
# new_phyloseq_obj <- phyloseq(otu_table(new_phyloseq_obj), tax_table(new_phyloseq_obj), sample_data(new_phyloseq_obj))
if(below == TRUE){
new_phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) <= cutoff}, TRUE)
return(sub_phy)}))
} else {
new_phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) >= cutoff}, TRUE)
if(sum(taxa_sums(sub_phy)) != 0){sub_phy <- filter_taxa(sub_phy, function(x){sum(x) != 0}, TRUE)}
return(sub_phy)}))
}
}else {
cutoff <- floor(ncol(otu_table(phyloseq_obj)) * frequency)
if(below == TRUE){
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
} else {
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
new_phyloseq_obj <- filter_taxa(new_phyloseq_obj, function(x){sum(x) != 0}, TRUE)
}
}
if(drop_samples == TRUE){
new_phyloseq_obj <- prune_samples(sample_sums(phyloseq_obj) > 0, phyloseq_obj)
}
return(new_phyloseq_obj)
}
find_generalists(mock_phyloseq, 0.3, "day")
treatments
Treatment_Groups <- setDT(as(sample_data(new_phyloseq_obj)[,colnames(sample_data(new_phyloseq_obj)) %in% treatment], "data.frame"))
# Treatment_Groups[, Treatment_Group := .GRP, by = Treatment_Groups]
eval(parse(text=paste0("Treatment_Groups[, Treatment_Group := paste(", paste(treatment, collapse = ", "), ", sep = '-'), by = Treatment_Groups]")))
sample_data(new_phyloseq_obj)[,'Treatment_Group'] <- Treatment_Groups[,"Treatment_Group"]
Treatment_Groups <- unique(Treatment_Groups[,"Treatment_Group"])
new_phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) >= cutoff}, TRUE)
if(sum(taxa_sums(sub_phy)) != 0){sub_phy <- filter_taxa(sub_phy, function(x){sum(x) != 0}, TRUE)}
return(sub_phy)}))
Treatment_Groups
new_phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(new_phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) >= cutoff}, TRUE)
if(sum(taxa_sums(sub_phy)) != 0){sub_phy <- filter_taxa(sub_phy, function(x){sum(x) != 0}, TRUE)}
return(sub_phy)}))
find_generalists <- function(phyloseq_obj, frequency = 0, treatments = NULL, subset = NULL, below = FALSE, drop_samples = FALSE){
# phyloseq_obj <- prune_samples(sample_sums(phyloseq_obj) > 0, phyloseq_obj)
if(!(is.null(treatments))){
if(is.numeric(treatments)){treatment <- colnames(sample_data(phyloseq_obj)[,treatments])
} else {treatment <- eval(parse(text=paste0("colnames(sample_data(phyloseq_obj)[,c('", paste0(treatments, collapse = "', '"), "')])")))
}
if(!(is.null(subset)) & length(treatment) == 1){
new_phyloseq_obj <- eval(parse(text=paste0("subset_samples(phyloseq_obj, ", paste0(treatment), " %in% c('", paste0(subset, collapse = "', '"), "'))")))
new_phyloseq_obj <- filter_taxa(new_phyloseq_obj, function(x){sum(x) > 0}, TRUE)
}
Treatment_Groups <- setDT(as(sample_data(new_phyloseq_obj)[,colnames(sample_data(new_phyloseq_obj)) %in% treatment], "data.frame"))
# Treatment_Groups[, Treatment_Group := .GRP, by = Treatment_Groups]
eval(parse(text=paste0("Treatment_Groups[, Treatment_Group := paste(", paste(treatment, collapse = ", "), ", sep = '-'), by = Treatment_Groups]")))
sample_data(new_phyloseq_obj)[,'Treatment_Group'] <- Treatment_Groups[,"Treatment_Group"]
Treatment_Groups <- unique(Treatment_Groups[,"Treatment_Group"])
# new_phyloseq_obj <- phyloseq(otu_table(new_phyloseq_obj), tax_table(new_phyloseq_obj), sample_data(new_phyloseq_obj))
if(below == TRUE){
new_phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(new_phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) <= cutoff}, TRUE)
return(sub_phy)}))
} else {
new_phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(new_phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) >= cutoff}, TRUE)
if(sum(taxa_sums(sub_phy)) != 0){sub_phy <- filter_taxa(sub_phy, function(x){sum(x) != 0}, TRUE)}
return(sub_phy)}))
}
}else {
cutoff <- floor(ncol(otu_table(phyloseq_obj)) * frequency)
if(below == TRUE){
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
} else {
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
new_phyloseq_obj <- filter_taxa(new_phyloseq_obj, function(x){sum(x) != 0}, TRUE)
}
}
if(drop_samples == TRUE){
new_phyloseq_obj <- prune_samples(sample_sums(phyloseq_obj) > 0, phyloseq_obj)
}
return(new_phyloseq_obj)
}
find_generalists(mock_phyloseq, 0.3, "day")
phyloseq_obj
# phyloseq_obj <- prune_samples(sample_sums(phyloseq_obj) > 0, phyloseq_obj)
if(!(is.null(treatments))){
if(is.numeric(treatments)){treatment <- colnames(sample_data(phyloseq_obj)[,treatments])
} else {treatment <- eval(parse(text=paste0("colnames(sample_data(phyloseq_obj)[,c('", paste0(treatments, collapse = "', '"), "')])")))
}
if(!(is.null(subset)) & length(treatment) == 1){
new_phyloseq_obj <- eval(parse(text=paste0("subset_samples(phyloseq_obj, ", paste0(treatment), " %in% c('", paste0(subset, collapse = "', '"), "'))")))
new_phyloseq_obj <- filter_taxa(new_phyloseq_obj, function(x){sum(x) > 0}, TRUE)
}
Treatment_Groups <- setDT(as(sample_data(new_phyloseq_obj)[,colnames(sample_data(new_phyloseq_obj)) %in% treatment], "data.frame"))
# Treatment_Groups[, Treatment_Group := .GRP, by = Treatment_Groups]
eval(parse(text=paste0("Treatment_Groups[, Treatment_Group := paste(", paste(treatment, collapse = ", "), ", sep = '-'), by = Treatment_Groups]")))
sample_data(new_phyloseq_obj)[,'Treatment_Group'] <- Treatment_Groups[,"Treatment_Group"]
Treatment_Groups <- unique(Treatment_Groups[,"Treatment_Group"])
# new_phyloseq_obj <- phyloseq(otu_table(new_phyloseq_obj), tax_table(new_phyloseq_obj), sample_data(new_phyloseq_obj))
if(below == TRUE){
new_phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(new_phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) <= cutoff}, TRUE)
return(sub_phy)}))
} else {
new_phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(new_phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) >= cutoff}, TRUE)
if(sum(taxa_sums(sub_phy)) != 0){sub_phy <- filter_taxa(sub_phy, function(x){sum(x) != 0}, TRUE)}
return(sub_phy)}))
}
}else {
cutoff <- floor(ncol(otu_table(phyloseq_obj)) * frequency)
if(below == TRUE){
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
} else {
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
new_phyloseq_obj <- filter_taxa(new_phyloseq_obj, function(x){sum(x) != 0}, TRUE)
}
}
new_phyloseq_obj
!(is.null(treatments))
is.numeric(treatments)
treatment
!(is.null(subset)) & length(treatment) == 1
Treatment_Groups
Treatment_Groups <- setDT(as(sample_data(new_phyloseq_obj)[,colnames(sample_data(new_phyloseq_obj)) %in% treatment], "data.frame"))
Treatment_Groups
# Treatment_Groups[, Treatment_Group := .GRP, by = Treatment_Groups]
eval(parse(text=paste0("Treatment_Groups[, Treatment_Group := paste(", paste(treatment, collapse = ", "), ", sep = '-'), by = Treatment_Groups]")))
Treatment_Groups
sample_data(new_phyloseq_obj)[,'Treatment_Group'] <- Treatment_Groups[,"Treatment_Group"]
sample_data(new_phyloseq_obj)
Treatment_Groups <- unique(Treatment_Groups[,"Treatment_Group"])
# new_phyloseq_obj <- phyloseq(otu_table(new_phyloseq_obj), tax_table(new_phyloseq_obj), sample_data(new_phyloseq_obj))
if(below == TRUE){
new_phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(new_phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) <= cutoff}, TRUE)
return(sub_phy)}))
} else {
new_phyloseq_obj <- do.call(merge_phyloseq,
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(new_phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) >= cutoff}, TRUE)
if(sum(taxa_sums(sub_phy)) != 0){sub_phy <- filter_taxa(sub_phy, function(x){sum(x) != 0}, TRUE)}
return(sub_phy)}))
}
new_phyloseq_obj
new_phyloseq_obj
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) <= cutoff}, TRUE)
new_phyloseq_obj
new_phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x != 0) >= cutoff}, TRUE)
new_phyloseq_obj
new_phyloseq_obj <- filter_taxa(new_phyloseq_obj, function(x){sum(x) != 0}, TRUE)
new_phyloseq_obj
source("../phyloseq_scripts/find_phyloseq_generalists.R")
find_generalists(mock_phyloseq, 0.3, "day")
find_generalists(mock_phyloseq, 0.3, "treatment")
find_generalists(mock_phyloseq, 0.3, 1)
find_generalists(mock_phyloseq, 0.3, 2)
find_generalists(mock_phyloseq, 0.3, 3)
find_generalists(mock_phyloseq, 0.3)
(!(is.null(treatments))
)
rm(treatment)
if(is.numeric(treatments)){treatment <- colnames(sample_data(phyloseq_obj)[,treatments])
} else {treatment <- eval(parse(text=paste0("colnames(sample_data(phyloseq_obj)[,c('", paste0(treatments, collapse = "', '"), "')])")))
}
treatment
phyloseq_obj
!(is.null(treatments))
if(is.numeric(treatments)){treatment <- colnames(sample_data(phyloseq_obj)[,treatments])
} else {treatment <- eval(parse(text=paste0("colnames(sample_data(phyloseq_obj)[,c('", paste0(treatments, collapse = "', '"), "')])")))
}
treatment
!(is.null(subset)) & length(treatment) == 1
phyloseq_obj <- filter_taxa(phyloseq_obj, function(x){sum(x) > 0}, TRUE)
phyloseq_obj
Treatment_Groups <- setDT(as(sample_data(phyloseq_obj)[,colnames(sample_data(phyloseq_obj)) %in% treatment], "data.frame"))
# Treatment_Groups[, Treatment_Group := .GRP, by = Treatment_Groups]
eval(parse(text=paste0("Treatment_Groups[, Treatment_Group := paste(", paste(treatment, collapse = ", "), ", sep = '-'), by = Treatment_Groups]")))
sample_data(phyloseq_obj)[,'Treatment_Group'] <- Treatment_Groups[,"Treatment_Group"]
Treatment_Groups <- unique(Treatment_Groups[,"Treatment_Group"])
Treatment_Groups
array(Treatment_Groups)
apply(array(Treatment_Groups), 1, FUN = function(group){
sub_phy <- eval(parse(text=paste0("subset_samples(phyloseq_obj, Treatment_Group == '",group,"')")))
cutoff <- floor(ncol(otu_table(sub_phy)) * frequency)
sub_phy <- filter_taxa(sub_phy, function(x){sum(x != 0) <= cutoff}, TRUE)
return(sub_phy)})
library(phyloschuyler)
install()
library(phyloschuyler)
